version: '3'

volumes:
  fcrepo:
  solr:
  db:
  db-fcrepo:
  redis:
  file_uploads:
  derivatives:
  cache:

networks:
  internal:

services:
  fcrepo:
    image: ualbertalib/docker-fcrepo4:4.7
    expose:
      - 8080
    volumes:
      - fcrepo:/data
    depends_on:
      - fcrepodb
    networks:
      internal:

  solr:
    image: solr:7-alpine
    expose:
      - 8983
    ports:
      - 8983:8983
    env_file:
      - .env
    healthcheck:
      test:
        - CMD
        - wget
        - "-O"
        - "/dev/null"
        - http://localhost:8983/solr/
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      internal:
    volumes:
      - solr:/opt/solr/server/solr/mycores
      - ./hyrax/solr/config:/opt/solr/solr_conf
    entrypoint:
      - docker-entrypoint.sh
      - solr-precreate
      - ${SOLR_CORE}
      - /opt/solr/solr_conf

  db: &db
    image: postgres:11-alpine
    networks:
      internal:
    env_file:
      - .env
    expose:
      - 5432
    healthcheck:
      test: "CMD echo 'SELECT 1' | POSTGRES_PASSWORD=${POSTGRES_PASSWORD} psql --host 127.0.0.1 --username #{POSTGRES_USER} --dbname #{POSTGRES_DB} --quiet --no-align --tuples-only"
      interval: 30s
      timeout: 5s
      retries: 3
  fcrepodb:
    <<: *db
    environment:
      - POSTGRES_DB=${POSTGRES_DB_FCREPO}
    volumes:
      - db-fcrepo:/var/lib/postgresql/data
  appdb:
    <<: *db
    environment:
      - POSTGRES_DB=${POSTGRES_DB_APP}
    volumes:
      - db:/var/lib/postgresql/data

  app: &app
    build:
      context: hyrax
      args:
        RAILS_ENV: ${RAILS_ENV}
        UPLOADS_PATH: ${UPLOADS_PATH}
        DERIVATIVES_PATH: ${DERIVATIVES_PATH}
        CACHE_PATH: ${CACHE_PATH}
        AIRBRAKE_HOST: ${AIRBRAKE_HOST}
        AIRBRAKE_PROJECT_ID: ${AIRBRAKE_PROJECT_ID}
        AIRBRAKE_PROJECT_KEY: ${AIRBRAKE_PROJECT_KEY}
    env_file:
      - .env
    volumes:
      - file_uploads:${UPLOADS_PATH}
      - derivatives:${DERIVATIVES_PATH}
      - cache:${CACHE_PATH}
      - /srv/ngdr/data/:/data/data
    networks:
      internal:

  web:
    <<: *app
    command: bash -c "/bin/docker-entrypoint.sh"
    depends_on:
      - appdb
      - solr
      - fcrepo
      - redis
    expose:
      - 3000

  workers:
    <<: *app
    command: bundle exec sidekiq
    environment:
      - SETTINGS__FITS_PATH=/fits/fits-1.3.0/fits.sh
    depends_on:
      - appdb
      - solr
      - fcrepo
      - redis

  redis:
    image: redis:5
    command: redis-server --appendonly yes
    volumes:
      - redis:/data
    expose:
      - 6379
    networks:
      internal:
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      interval: 30s
      timeout: 5s
      retries: 3
